<!-- SPDX-FileCopyrightText: Â© Fossology contributors

     SPDX-License-Identifier: GPL-2.0-only
-->

To Whom it May Concern: 


What This Is and How to Work It
-------------------------------


This directory in the FOSSology source tree (`agents/nomos`) contains the source code for the `nomos` license analysis agent. The code originated as a standalone license-scanning tool but is now fully integrated with the FOSSology framework.

The build process for `nomos` has been migrated to the standard FOSSology CMake-based system.



## PostgreSQL Dependency
To build the `nomos` agent, PostgreSQL development headers must be installed. Ensure the PostgreSQL development package (`libpq-dev`) is available on your system:

- For Ubuntu/Debian:
  ```bash
  sudo apt-get install libpq-dev
  ```

To build and run `nomos`:

1. Navigate to the `nomos` directory:
   ```bash
   cd agents/nomos



Note About the Source Code and Impending Changes
------------------------------------------------

Because this code came from another tool similar to FOSSology, but with
different structure and conventions, the process of converting it into 
a full-fledged FOSSology agent is ongoing.

With that in mind, comments with "CDB" in them are bread crumbs I've 
left in places where I was unsure about a change I made or to note a potential
refinement (CDB == my initials).



To Do's
-------

- Ensure all trace calls at the beginning of functions use `traceFunc()` (defined in `util.c`).
- Review and clean up unused fields in the `gl` global variable structure.
- Document the configuration requirements for `nomos.conf`.
- Validate the output and error handling mechanisms of the `nomos_exec` binary.
- Add additional unit tests to cover edge cases.
- Explore further optimization of the license scanning process.



## fossology.conf Configuration
The `fossology.conf` file is required for running the `nomos` agent. It should be placed in the default configuration directory (`/etc/fossology/`) or an alternate location specified by the `FOSS_CONFIG` environment variable.



Changes
-------

- Migrated the build process from a custom `Makefile` to the standard FOSSology CMake-based system.
- Updated `ls_t` to `licSpec_t` and `lic_t` to `licText_t`.
- Integrated the `nomos` agent with the main FOSSology framework.
- Removed deprecated compile-time definitions such as `USE_MMAP`.



Questions
---------

- Should the `validateTools` function be reintroduced to enhance pre-check validation?
- Is the `LANG` environment variable setting still required, and what are its implications?
- Should the log functionality be reimplemented with improved logging locations?
- What are the performance implications of removing the custom magic file?



#defines Used
-------------

- `SHOW_LOCATION`: Enables pinpointing of license locations during scans.
- `PROC_TRACE`: Enables trace logs for process execution.
- `DEBUG`: Enables debug logs.
- `GLOBAL_DEBUG`: Provides debug access to the global variable structure.
- `MEMORY_TRACING`: Wraps malloc calls for memory debugging.
- `STOPWATCH`: Measures performance of specific code blocks.
- `TIMING`: Used for timing performance-critical operations.



Changes made from my nomos_experimental version
-----------------------------------------------

Remove all code #ifdef'd by USE_MMAP 

